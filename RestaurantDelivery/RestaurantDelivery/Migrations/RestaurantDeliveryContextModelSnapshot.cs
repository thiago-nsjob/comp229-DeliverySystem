// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantDelivery.Models;

namespace RestaurantDelivery.Migrations
{
    [DbContext(typeof(RestaurantDeliveryContext))]
    partial class RestaurantDeliveryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantDelivery.Models.MenuItem", b =>
                {
                    b.Property<int>("IdMenuItem")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRestaurant");

                    b.Property<string>("ItemDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ItemName")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdMenuItem")
                        .HasName("PK_MenuItems");

                    b.HasIndex("IdRestaurant");

                    b.ToTable("MenuItem");
                });

            modelBuilder.Entity("RestaurantDelivery.Models.Order", b =>
                {
                    b.Property<int>("IdOrder");

                    b.Property<string>("CustomerAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomerName")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CustomerNotes")
                        .HasMaxLength(2000)
                        .IsUnicode(false);

                    b.Property<int>("IdMenuItem");

                    b.Property<int>("IdRestaurant");

                    b.Property<decimal?>("OrderGrossAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("OrderNetAmount")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal?>("OrderTax")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdOrder")
                        .HasName("PK_Orders");

                    b.HasIndex("IdMenuItem");

                    b.HasIndex("IdRestaurant");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("RestaurantDelivery.Models.Restaurant", b =>
                {
                    b.Property<int>("IdRestaurant")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Cuisine")
                        .HasMaxLength(30);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("IdRestaurant")
                        .HasName("PK_Restaurants");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("RestaurantDelivery.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantDelivery.Models.Restaurant", "IdRestaurantNavigation")
                        .WithMany("MenuItem")
                        .HasForeignKey("IdRestaurant")
                        .HasConstraintName("FK_MenuItems_Restaurants");
                });

            modelBuilder.Entity("RestaurantDelivery.Models.Order", b =>
                {
                    b.HasOne("RestaurantDelivery.Models.MenuItem", "IdMenuItemNavigation")
                        .WithMany("Order")
                        .HasForeignKey("IdMenuItem")
                        .HasConstraintName("FK_Orders_MenuItems");

                    b.HasOne("RestaurantDelivery.Models.Restaurant", "IdRestaurantNavigation")
                        .WithMany("Order")
                        .HasForeignKey("IdRestaurant")
                        .HasConstraintName("FK_Orders_Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
